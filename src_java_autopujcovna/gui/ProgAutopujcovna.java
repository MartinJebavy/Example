/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import abt.eTypProhl;
import apq.AbstrPriorQueue;
import apq.IAbstrPriorQueue;
import auta.ComparatorKM;
import auta.IAuto;
import auta.Osobni;
import autopujcovna.Autopujcovna;
import autopujcovna.IAutopujcovna;
import autopujcovna.SouborSeznam;
import autopujcovna.eTyp;
import gui.jdialog.JDOdeberNajdi;
import gui.jdialog.JDPozice;
import gui.jdialog.JDOsobniAuto;
import gui.jdialog.JDPobocka;
import gui.jdialog.JDText;
import gui.jdialog.JDUzitkoveAuto;
import gui.jdialog.JDZrus;
import java.io.IOException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import pobocka.EnumPozice;
import pobocka.IPobocka;

/**
 *
 * @author st39740
 */
public class ProgAutopujcovna extends javax.swing.JFrame {

    private IAutopujcovna pujcovna;
    private IAbstrPriorQueue<IAuto> prioritniFronta;
    private int idPobocky = 1;

    /**
     * Creates new form ProgAutopujcovna
     */
    public ProgAutopujcovna() {
        pujcovna = new Autopujcovna("Martin");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTlacitek = new javax.swing.JPanel();
        jButtonVlozPobocku = new javax.swing.JButton();
        jButtonOdeberPobocku = new javax.swing.JButton();
        jButtonVlozAutoOsobni = new javax.swing.JButton();
        jButtonOdeberAuto = new javax.swing.JButton();
        jButtonVypujciAuto = new javax.swing.JButton();
        jButtonVratAuto = new javax.swing.JButton();
        jButtonPrvni = new javax.swing.JButton();
        jButtonZrus = new javax.swing.JButton();
        jButtonUlozStav = new javax.swing.JButton();
        jButtonNactiStav = new javax.swing.JButton();
        jButtonVlozAutoUzitkove = new javax.swing.JButton();
        jButtonPosledni = new javax.swing.JButton();
        jButtonPredchudce = new javax.swing.JButton();
        jButtonNaslednik = new javax.swing.JButton();
        jButtonAktualni = new javax.swing.JButton();
        jButtonNajdiAuto = new javax.swing.JButton();
        jComboBoxProhlidky = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButtonVybudujFrontu = new javax.swing.JButton();
        jTabbedPaneZalozky = new javax.swing.JTabbedPane();
        jScrollPanePobocky = new javax.swing.JScrollPane();
        jTextAreaPobocky = new javax.swing.JTextArea();
        jScrollPaneAuta = new javax.swing.JScrollPane();
        jTextAreaAuta = new javax.swing.JTextArea();
        jScrollPaneVypujcky = new javax.swing.JScrollPane();
        jTextAreaVypujcky = new javax.swing.JTextArea();
        jScrollPaneFronta = new javax.swing.JScrollPane();
        jTextAreaFronta = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanelTlacitek.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanelTlacitek.setPreferredSize(new java.awt.Dimension(190, 250));

        jButtonVlozPobocku.setText("Vlož pobočku");
        jButtonVlozPobocku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVlozPobockuActionPerformed(evt);
            }
        });

        jButtonOdeberPobocku.setText("Odeber pobočku");
        jButtonOdeberPobocku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdeberPobockuActionPerformed(evt);
            }
        });

        jButtonVlozAutoOsobni.setText("Osobní");
        jButtonVlozAutoOsobni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVlozAutoOsobniActionPerformed(evt);
            }
        });

        jButtonOdeberAuto.setText("Odeber auto");
        jButtonOdeberAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOdeberAutoActionPerformed(evt);
            }
        });

        jButtonVypujciAuto.setText("Vypujči auto");
        jButtonVypujciAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVypujciAutoActionPerformed(evt);
            }
        });

        jButtonVratAuto.setText("Vrať auto");
        jButtonVratAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVratAutoActionPerformed(evt);
            }
        });

        jButtonPrvni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikona/sipka_do_leva.jpg"))); // NOI18N
        jButtonPrvni.setToolTipText("Na začátek");
        jButtonPrvni.setMaximumSize(new java.awt.Dimension(55, 45));
        jButtonPrvni.setPreferredSize(new java.awt.Dimension(55, 45));
        jButtonPrvni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrvniActionPerformed(evt);
            }
        });

        jButtonZrus.setText("Zruš");
        jButtonZrus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZrusActionPerformed(evt);
            }
        });

        jButtonUlozStav.setText("Ulož stav");
        jButtonUlozStav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUlozStavActionPerformed(evt);
            }
        });

        jButtonNactiStav.setText("Načti stav");
        jButtonNactiStav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNactiStavActionPerformed(evt);
            }
        });

        jButtonVlozAutoUzitkove.setText("Užitkové");
        jButtonVlozAutoUzitkove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVlozAutoUzitkoveActionPerformed(evt);
            }
        });

        jButtonPosledni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikona/sipka_do_prava.jpg"))); // NOI18N
        jButtonPosledni.setToolTipText("Na konec");
        jButtonPosledni.setMaximumSize(new java.awt.Dimension(55, 45));
        jButtonPosledni.setPreferredSize(new java.awt.Dimension(55, 45));
        jButtonPosledni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPosledniActionPerformed(evt);
            }
        });

        jButtonPredchudce.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikona/sipky_do_leva_o_jedno.jpg"))); // NOI18N
        jButtonPredchudce.setToolTipText("Předchozí");
        jButtonPredchudce.setMaximumSize(new java.awt.Dimension(55, 45));
        jButtonPredchudce.setPreferredSize(new java.awt.Dimension(55, 45));
        jButtonPredchudce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPredchudceActionPerformed(evt);
            }
        });

        jButtonNaslednik.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikona/sipky_do_prava_o_jedno.jpg"))); // NOI18N
        jButtonNaslednik.setToolTipText("Následující");
        jButtonNaslednik.setMaximumSize(new java.awt.Dimension(55, 45));
        jButtonNaslednik.setPreferredSize(new java.awt.Dimension(55, 45));
        jButtonNaslednik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNaslednikActionPerformed(evt);
            }
        });

        jButtonAktualni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikona/sipka_dolu.jpg"))); // NOI18N
        jButtonAktualni.setToolTipText("Změň aktuální");
        jButtonAktualni.setMaximumSize(new java.awt.Dimension(55, 45));
        jButtonAktualni.setPreferredSize(new java.awt.Dimension(55, 45));
        jButtonAktualni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAktualniActionPerformed(evt);
            }
        });

        jButtonNajdiAuto.setText("Najdi auto");
        jButtonNajdiAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNajdiAutoActionPerformed(evt);
            }
        });

        jComboBoxProhlidky.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Do hloubky", "Do šířky" }));
        jComboBoxProhlidky.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxProhlidkyItemStateChanged(evt);
            }
        });

        jLabel1.setText("Druh výpisu");

        jButtonVybudujFrontu.setText("Vybuduj frontu");
        jButtonVybudujFrontu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVybudujFrontuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTlacitekLayout = new javax.swing.GroupLayout(jPanelTlacitek);
        jPanelTlacitek.setLayout(jPanelTlacitekLayout);
        jPanelTlacitekLayout.setHorizontalGroup(
            jPanelTlacitekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTlacitekLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTlacitekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNactiStav, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addGroup(jPanelTlacitekLayout.createSequentialGroup()
                        .addGroup(jPanelTlacitekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, Short.MAX_VALUE)
                            .addGroup(jPanelTlacitekLayout.createSequentialGroup()
                                .addComponent(jButtonPrvni, javax.swing.GroupLayout.PREFERRED_SIZE, 28, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPredchudce, javax.swing.GroupLayout.PREFERRED_SIZE, 28, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelTlacitekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTlacitekLayout.createSequentialGroup()
                                .addComponent(jButtonAktualni, javax.swing.GroupLayout.PREFERRED_SIZE, 28, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonNaslednik, javax.swing.GroupLayout.PREFERRED_SIZE, 28, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPosledni, javax.swing.GroupLayout.PREFERRED_SIZE, 28, Short.MAX_VALUE))
                            .addComponent(jComboBoxProhlidky, 0, 96, Short.MAX_VALUE)))
                    .addGroup(jPanelTlacitekLayout.createSequentialGroup()
                        .addComponent(jButtonVlozAutoOsobni, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonVlozAutoUzitkove, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                    .addComponent(jButtonVlozPobocku, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButtonOdeberPobocku, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButtonOdeberAuto, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButtonUlozStav, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButtonZrus, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButtonVratAuto, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButtonVypujciAuto, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButtonNajdiAuto, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jButtonVybudujFrontu, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelTlacitekLayout.setVerticalGroup(
            jPanelTlacitekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTlacitekLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jButtonVlozPobocku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonOdeberPobocku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTlacitekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVlozAutoOsobni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonVlozAutoUzitkove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonOdeberAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTlacitekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonPrvni, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButtonNaslednik, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButtonPredchudce, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButtonAktualni, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButtonPosledni, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonVybudujFrontu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTlacitekLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBoxProhlidky)
                    .addGroup(jPanelTlacitekLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(9, 9, 9)
                .addComponent(jButtonNajdiAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonVypujciAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonVratAuto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonZrus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUlozStav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNactiStav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        getContentPane().add(jPanelTlacitek, java.awt.BorderLayout.LINE_START);

        jTabbedPaneZalozky.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneZalozkyStateChanged(evt);
            }
        });

        jTextAreaPobocky.setColumns(20);
        jTextAreaPobocky.setRows(5);
        jScrollPanePobocky.setViewportView(jTextAreaPobocky);

        jTabbedPaneZalozky.addTab("Pobočky", jScrollPanePobocky);

        jTextAreaAuta.setColumns(20);
        jTextAreaAuta.setRows(5);
        jScrollPaneAuta.setViewportView(jTextAreaAuta);

        jTabbedPaneZalozky.addTab("Auta", jScrollPaneAuta);

        jTextAreaVypujcky.setColumns(20);
        jTextAreaVypujcky.setRows(5);
        jScrollPaneVypujcky.setViewportView(jTextAreaVypujcky);

        jTabbedPaneZalozky.addTab("Vypůjčená auta", jScrollPaneVypujcky);

        jTextAreaFronta.setColumns(20);
        jTextAreaFronta.setRows(5);
        jScrollPaneFronta.setViewportView(jTextAreaFronta);

        jTabbedPaneZalozky.addTab("Fronta", jScrollPaneFronta);

        getContentPane().add(jTabbedPaneZalozky, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVlozAutoUzitkoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVlozAutoUzitkoveActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            JDUzitkoveAuto noveUzitkoveAuto = new JDUzitkoveAuto(this, true);
            noveUzitkoveAuto.setVisible(true);
            IAuto noveAuto = noveUzitkoveAuto.getUzitkove();
            if (noveAuto != null) {
                if (porovnavaniSPZ(noveAuto.getSpz()) == false) {
                    pujcovna.vlozAuto(noveAuto);
                    if (prioritniFronta == null) {
                        prioritniFronta = new AbstrPriorQueue(5, new ComparatorKM());
                    }
                    prioritniFronta.vloz(noveAuto);
                    JOptionPane.showMessageDialog(rootPane, "Auto úspěšně vloženo");
                    jTabbedPaneZalozky.setSelectedIndex(1);
                    nastaveniTlacitek();
                    vypisSeznam();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Byla nalezena duplicita v SPZ!\nZadejte jedinečnou SPZ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Vlož aspoň jednu pobočku");
        }
    }//GEN-LAST:event_jButtonVlozAutoUzitkoveActionPerformed

    private void jButtonNactiStavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNactiStavActionPerformed
        try {
            pujcovna = SouborSeznam.nacti("Stav.obj", pujcovna, eTyp.POBOCKA);
            pujcovna = SouborSeznam.nacti("Vyjpujcky.obj", pujcovna, eTyp.VYP_AUTA);
            JOptionPane.showMessageDialog(this, "Soubory byly úspěšně načteny");
            vypisSeznam();
        } catch (IOException ex) {
            Logger.getLogger(ProgAutopujcovna.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonNactiStavActionPerformed

    private void jButtonUlozStavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUlozStavActionPerformed

        try {
            SouborSeznam.uloz("Stav.obj", pujcovna, eTyp.POBOCKA);
            SouborSeznam.uloz("Vyjpujcky.obj", pujcovna, eTyp.VYP_AUTA);
            JOptionPane.showMessageDialog(this, "Stav uložen do souborů");
        } catch (IOException ex) {
            Logger.getLogger(ProgAutopujcovna.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonUlozStavActionPerformed

    private void jButtonZrusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZrusActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            JDZrus zrus = new JDZrus(this, true);
            zrus.setVisible(true);
            String text = "";
            if (zrus.isAuta()) {
                pujcovna.zrusPobocku();
                text += "Auta na aktuální pobočce zrušena!\n";
                prioritniFronta.zrus();
            }
            if (zrus.isPobocky()) {
                jTextAreaAuta.setText("");
                pujcovna.zrus();
                text += "Všechny pobočky byly zrušeny!\n";
                prioritniFronta.zrus();
            }
            prioritniFronta.zrus();
            text += "Prioritni fronta zrušena!";
            JOptionPane.showMessageDialog(rootPane, text);
            vypisSeznam();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Nelze nic zrušit");
        }
    }//GEN-LAST:event_jButtonZrusActionPerformed

    private void jButtonPrvniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrvniActionPerformed
        switch (jTabbedPaneZalozky.getSelectedIndex()) {
            case 0:
                if (pujcovna.getPocetPobocek() != 0) {
                    pujcovna.zpristupniPobocku(EnumPozice.PRVNI);
                }
                break;

            case 2:
                if (pujcovna.getPocetPobocek() != 0) {
                    if (pujcovna.getPocetVypujcek() != 0) {
                        pujcovna.zpristupniVypujceneAuto(EnumPozice.PRVNI);
                    }

                }
                break;

        }
        vypisSeznam();
    }//GEN-LAST:event_jButtonPrvniActionPerformed

    private void jButtonVratAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVratAutoActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            jTabbedPaneZalozky.setSelectedIndex(2);
            nastaveniTlacitek();
            if (pujcovna.getPocetVypujcek() != 0) {
                JDPozice vratAuto = new JDPozice(this, true);
                vratAuto.setTitle("Vrať auto");
                vratAuto.setVisible(true);
                try {
                    if (vratAuto.getPozice() != null) {
                        prioritniFronta.vloz(pujcovna.vratAuto(vratAuto.getPozice()));
                        JOptionPane.showMessageDialog(rootPane, "Auto vráceno");
                        vypisSeznam();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(rootPane, "Nelze vrátit auto z požadované pozice");
                }

            } else {
                JOptionPane.showMessageDialog(rootPane, "Žádný auto k vrácení");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Vlož aspoň jednu pobočku");
        }
    }//GEN-LAST:event_jButtonVratAutoActionPerformed

    private void jButtonVypujciAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVypujciAutoActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            if (prioritniFronta != null) {
                if (!(prioritniFronta.jePrazdny())) {
                    Iterator<IPobocka> projdiPobocky = pujcovna.iterator(eTyp.POBOCKA, null);
                    IAuto nalezene = null;
                    IAuto hledane = prioritniFronta.odeberMax();
                    while (projdiPobocky.hasNext()) {
                        IPobocka vystup = projdiPobocky.next();
                        nalezene = vystup.najdiAuto(hledane.getSpz());
                        if (nalezene != null) {
                            break;
                        }
                    }
                    pujcovna.vypujciAuto(nalezene);
                    vypisSeznam();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Fronta je prazdná");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Nebyla vybudována fronta");
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Vlož aspoň jednu pobočku");
        }
    }//GEN-LAST:event_jButtonVypujciAutoActionPerformed

    private void jButtonOdeberAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdeberAutoActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            if (pujcovna.getPocetAutNaPobocce() != 0) {
                jTabbedPaneZalozky.setSelectedIndex(1);
                nastaveniTlacitek();
                JDOdeberNajdi odeberAuto = new JDOdeberNajdi(this, true);
                odeberAuto.setTitle("Odeber auto z aktualni pobocky");
                odeberAuto.setVisible(true);
                if (odeberAuto.getSpz() != null) {
                    IAuto auto = pujcovna.odeberAuto(odeberAuto.getSpz());
                    if (auto == null) {
                        JOptionPane.showMessageDialog(rootPane, "Auto s danou SPZ nebylo nalezeno");
                    } else {
                        String text = "Auto úspěšně odstraněno!\nOdstraněné auto:\n" + auto.toString();
                        JDText okno = new JDText(this, true);
                        okno.setTextovePole(text);
                        okno.setVisible(true);
                        vypisSeznam();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Žádné auto k odebrání");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Vlož aspoň jednu pobočku");
        }

    }//GEN-LAST:event_jButtonOdeberAutoActionPerformed

    private void jButtonVlozAutoOsobniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVlozAutoOsobniActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            JDOsobniAuto noveOsobniAuto = new JDOsobniAuto(this, true);
            noveOsobniAuto.setVisible(true);
            IAuto noveAuto = noveOsobniAuto.getOsobni();
            if (noveAuto != null) {
                if (porovnavaniSPZ(noveAuto.getSpz()) == false) {
                    pujcovna.vlozAuto(noveAuto);
                    if (prioritniFronta == null) {
                        prioritniFronta = new AbstrPriorQueue(5, new ComparatorKM());
                    }
                    prioritniFronta.vloz(noveAuto);
                    JOptionPane.showMessageDialog(rootPane, "Auto úspěšně vloženo");
                    jTabbedPaneZalozky.setSelectedIndex(1);
                    nastaveniTlacitek();
                    vypisSeznam();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Byla nalezena duplicita v SPZ!\nZadejte jedinečnou SPZ");
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Vlož aspoň jednu pobočku");
        }
    }//GEN-LAST:event_jButtonVlozAutoOsobniActionPerformed

    private void jButtonOdeberPobockuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOdeberPobockuActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            JDPozice odeberPobocku = new JDPozice(this, true);
            odeberPobocku.setTitle("Odeber pobočku");
            odeberPobocku.setVisible(true);
            if (odeberPobocku.getPozice() != null) {
                IPobocka pobocka = pujcovna.odeberPobocku(odeberPobocku.getPozice());
                if (pobocka == null) {
                    JOptionPane.showMessageDialog(rootPane, "Nelze odebrat pobočku z požadované pozice");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Pobočka úspěšně odstraněna");
                    vypisSeznam();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Žádná pobočka k odstranění");
        }
    }//GEN-LAST:event_jButtonOdeberPobockuActionPerformed

    private void jButtonVlozPobockuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVlozPobockuActionPerformed
        JDPobocka novaPobocka = new JDPobocka(this, true, idPobocky);
        novaPobocka.setVisible(true);
        if (novaPobocka.getPozice() != null) {
            IPobocka nova = new pobocka.Pobocka(novaPobocka.getNazev());
            pujcovna.vlozPobocku(nova, novaPobocka.getPozice());
            JOptionPane.showMessageDialog(rootPane, "Pobočka vložena");
            idPobocky++;
            vypisSeznam();
        }
    }//GEN-LAST:event_jButtonVlozPobockuActionPerformed

    private void jButtonPosledniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPosledniActionPerformed
        switch (jTabbedPaneZalozky.getSelectedIndex()) {
            case 0:
                if (pujcovna.getPocetPobocek() != 0) {
                    pujcovna.zpristupniPobocku(EnumPozice.POSLEDNI);
                }
                break;

            case 2:
                if (pujcovna.getPocetPobocek() != 0) {
                    if (pujcovna.getPocetVypujcek() != 0) {
                        pujcovna.zpristupniVypujceneAuto(EnumPozice.POSLEDNI);
                    }
                }
                break;

        }
        vypisSeznam();
    }//GEN-LAST:event_jButtonPosledniActionPerformed

    private void jButtonPredchudceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPredchudceActionPerformed
        switch (jTabbedPaneZalozky.getSelectedIndex()) {
            case 0:
                if (pujcovna.getPocetPobocek() != 0) {
                    pujcovna.zpristupniPobocku(EnumPozice.PREDCHUDCE);
                }
                break;

            case 2:
                if (pujcovna.getPocetPobocek() != 0) {
                    if (pujcovna.getPocetVypujcek() != 0) {
                        pujcovna.zpristupniVypujceneAuto(EnumPozice.PREDCHUDCE);
                    }

                }
                break;

        }
        vypisSeznam();
    }//GEN-LAST:event_jButtonPredchudceActionPerformed

    private void jButtonNaslednikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNaslednikActionPerformed
        switch (jTabbedPaneZalozky.getSelectedIndex()) {
            case 0:
                if (pujcovna.getPocetPobocek() != 0) {
                    pujcovna.zpristupniPobocku(EnumPozice.NASLEDNIK);
                }
                break;

            case 2:
                if (pujcovna.getPocetPobocek() != 0) {
                    if (pujcovna.getPocetVypujcek() != 0) {
                        pujcovna.zpristupniVypujceneAuto(EnumPozice.NASLEDNIK);
                    }

                }
                break;

        }
        vypisSeznam();
    }//GEN-LAST:event_jButtonNaslednikActionPerformed

    private void jButtonAktualniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAktualniActionPerformed
        switch (jTabbedPaneZalozky.getSelectedIndex()) {
            case 0:
                if (pujcovna.getPocetPobocek() != 0) {
                    IPobocka uprav = pujcovna.zpristupniPobocku(EnumPozice.AKTUALNI);
                    JDPobocka pobocka = new JDPobocka(this, true, 0);
                    pobocka.upravitPobocku();
                    pobocka.setVisible(true);
                    if (pobocka.getNazev() != null) {
                        uprav.setJmenoPobocky(pobocka.getNazev());
                    }
                }
                break;
            case 1:
                if (pujcovna.getPocetPobocek() != 0) {
                    if (pujcovna.getPocetAutNaPobocce() != 0) {
                        JDOdeberNajdi najdi = new JDOdeberNajdi(this, true);
                        najdi.setTitle("Najdi auto");
                        najdi.nastav(2);
                        najdi.setVisible(true);
                        if (najdi.getSpz() != null) {
                            IAuto upravAuto = pujcovna.najdiAuto(najdi.getSpz());
                            if (upravAuto != null) {

                                if (upravAuto instanceof Osobni) {
                                    JDOsobniAuto auto = new JDOsobniAuto(this, true);
                                    auto.upravAuto(upravAuto);
                                    auto.setVisible(true);
                                    upravAuto.setBarva(auto.getBarva());
                                    upravAuto.setPocetKilometru(auto.getStavTachometru());
                                    upravAuto.setPocetVypujceni(auto.getPocetVypujceni());
                                    upravAuto.setSpz(auto.getSpz());
                                } else {
                                    JDUzitkoveAuto auto = new JDUzitkoveAuto(this, true);
                                    auto.upravAuto(upravAuto);
                                    auto.setVisible(true);
                                    upravAuto.setPocetKilometru(auto.getStavTachometru());
                                    upravAuto.setPocetVypujceni(auto.getPocetVypujceni());
                                    upravAuto.setSpz(auto.getSpz());
                                    upravAuto.setNosnost(auto.getNosnost());
                                }

                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Auto s danou SPZ nebylo nalezeno v aktualni pobočce");
                            }
                        }
                    }
                }
                break;
            case 2:
                if (pujcovna.getPocetPobocek() != 0) {
                    if (pujcovna.getPocetVypujcek() != 0) {
                        pujcovna.zpristupniVypujceneAuto(EnumPozice.AKTUALNI);
                        JOptionPane.showMessageDialog(rootPane, "Nelze upravit vypujčené auto");
                    }

                }
                break;

        }
        vypisSeznam();
    }//GEN-LAST:event_jButtonAktualniActionPerformed

    private void jTabbedPaneZalozkyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPaneZalozkyStateChanged
        nastaveniTlacitek();
    }//GEN-LAST:event_jTabbedPaneZalozkyStateChanged

    private void jButtonNajdiAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNajdiAutoActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            if (pujcovna.getPocetAutNaPobocce() != 0) {
                nastaveniTlacitek();
                JDOdeberNajdi najdi = new JDOdeberNajdi(this, true);
                najdi.setTitle("Najdi auto");
                najdi.nastav(0);
                najdi.setVisible(true);
                if (najdi.getSpz() != null) {
                    int cisloHledani = najdi.getDruhHledani();
                    IAuto hledane = null;
                    IPobocka aktualni = null;
                    switch (cisloHledani) {
                        case 1:
                            Iterator projdiPobocky = pujcovna.iterator(eTyp.POBOCKA, null);

                            while (projdiPobocky.hasNext()) {
                                aktualni = (IPobocka) projdiPobocky.next();
                                hledane = aktualni.najdiAuto(najdi.getSpz());
                                if (hledane != null) {
                                    break;
                                }
                            }
                            if (hledane != null) {
                                String text = "Auto nalezeno na pobočce: " + aktualni.getJmenoPobocky() + "\n";
                                text += "Parametry auta:\n" + hledane.toString();
                                JDText okno = new JDText(this, true);
                                okno.setTextovePole(text);
                                okno.setVisible(true);
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Auto s danou SPZ nebylo nalezeno");
                            }
                            break;
                        case 2:
                            hledane = pujcovna.najdiAuto(najdi.getSpz());
                            if (hledane != null) {
                                aktualni = pujcovna.zpristupniPobocku(EnumPozice.AKTUALNI);
                                String text = "Auto nalezeno na aktualni pobocce: " + aktualni.getJmenoPobocky() + "\n";
                                text += "Parametry auta:\n" + hledane.toString();
                                JDText okno = new JDText(this, true);
                                okno.setTextovePole(text);
                                okno.setVisible(true);
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Auto s danou SPZ nebylo nalezeno v aktualni pobočce");
                            }
                            break;

                    }
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Žádné auta na pobočkách");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Vlož aspoň jednu pobočku");
        }

    }//GEN-LAST:event_jButtonNajdiAutoActionPerformed

    private void jComboBoxProhlidkyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxProhlidkyItemStateChanged
        vypisSeznam();
    }//GEN-LAST:event_jComboBoxProhlidkyItemStateChanged

    private void jButtonVybudujFrontuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVybudujFrontuActionPerformed
        if (pujcovna.getPocetPobocek() != 0) {
            prioritniFronta = new AbstrPriorQueue(5, new ComparatorKM());
            Iterator<IPobocka> projdiPobocky = pujcovna.iterator(eTyp.POBOCKA, null);
            while (projdiPobocky.hasNext()) {
                IPobocka pobocek = projdiPobocky.next();
                if (pobocek.getPocetAutNaPobocce() != 0) {
                    Iterator<IAuto> aut = pobocek.iterator(eTypProhl.SIRKA);
                    while (aut.hasNext()) {
                        IAuto zpristupneneAuto = aut.next();
                        prioritniFronta.vloz(zpristupneneAuto);

                    }
                }
            }
            vypisSeznam();
            JOptionPane.showMessageDialog(rootPane, "Fronta vybudovana");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Vlož aspoň jednu pobočku");
        }
    }//GEN-LAST:event_jButtonVybudujFrontuActionPerformed

    private boolean porovnavaniSPZ(String spz) {
        Iterator projdiPobocky = pujcovna.iterator(eTyp.POBOCKA, null);
        while (projdiPobocky.hasNext()) {
            IPobocka vystup = (IPobocka) projdiPobocky.next();
            if (vystup.najdiAuto(spz) != null) {
                return true;
            }
        }
        return false;
    }

    private void nastaveniTlacitek() {
        switch (jTabbedPaneZalozky.getSelectedIndex()) {

            case 0:
                jButtonPrvni.setEnabled(true);
                jButtonPredchudce.setEnabled(true);
                jButtonNaslednik.setEnabled(true);
                jButtonPosledni.setEnabled(true);

                break;
            case 1:
                jButtonPrvni.setEnabled(false);
                jButtonPredchudce.setEnabled(false);
                jButtonNaslednik.setEnabled(false);
                jButtonPosledni.setEnabled(false);

                break;
            case 2:
                jButtonPrvni.setEnabled(true);
                jButtonPredchudce.setEnabled(true);
                jButtonNaslednik.setEnabled(true);
                jButtonPosledni.setEnabled(true);

                break;
        }

    }

    private void vypisSeznam() {

        String textPobocky = "";
        String textAuta = "";
        String textVypujcky = "";
        String textFronty = "";

        Iterator projdiPobocky = pujcovna.iterator(eTyp.POBOCKA, null);
        while (projdiPobocky.hasNext()) {
            IPobocka vystup = (IPobocka) projdiPobocky.next();
            if (vystup == pujcovna.zpristupniPobocku(EnumPozice.AKTUALNI)) {
                textPobocky += "   *-*  " + vystup.getJmenoPobocky() + "  *-*\n";
            } else {
                textPobocky += "        " + vystup.getJmenoPobocky() + "\n";
            }
        }
        jTextAreaPobocky.setText(textPobocky);

        if (pujcovna.getPocetPobocek() != 0) {
            if (pujcovna.getPocetAutNaPobocce() != 0) {
                Iterator projdiAuta = null;
                switch (jComboBoxProhlidky.getSelectedIndex()) {
                    case 0:
                        projdiAuta = pujcovna.iterator(eTyp.AUTA, eTypProhl.HLOUBKA);
                        break;
                    case 1:
                        projdiAuta = pujcovna.iterator(eTyp.AUTA, eTypProhl.SIRKA);
                        break;
                }

                textAuta += "   " + pujcovna.zpristupniPobocku(EnumPozice.AKTUALNI).getJmenoPobocky()
                        + "\tPočet aut:    " + pujcovna.zpristupniPobocku(EnumPozice.AKTUALNI).getPocetAutNaPobocce() + "\n\n";
                while (projdiAuta.hasNext()) {
                    IAuto vystup = (IAuto) projdiAuta.next();
                    textAuta += vystup.toString() + "\n";

                }
            }
            jTextAreaAuta.setText(textAuta);

            Iterator projdiVypAuta = pujcovna.iterator(eTyp.VYP_AUTA, null);
            while (projdiVypAuta.hasNext()) {
                IAuto vystup = (IAuto) projdiVypAuta.next();
                if (vystup == pujcovna.zpristupniVypujceneAuto(EnumPozice.AKTUALNI)) {
                    textVypujcky += "-->   " + vystup.toString() + "\n";
                } else {
                    textVypujcky += vystup.toString() + "\n";
                }
            }
            jTextAreaVypujcky.setText(textVypujcky);
        }
        if (prioritniFronta != null) {
            Iterator<IAuto> fronta = prioritniFronta.vytvorIterator();
            if (!(prioritniFronta.jePrazdny())) {
                while (fronta.hasNext()) {
                    IAuto auto = fronta.next();
                    textFronty += "Počet km: " + auto.getPocetKilometru() + "\t" + auto.getSpz() + "\n";
                }
            }
            jTextAreaFronta.setText(textFronty);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgAutopujcovna.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgAutopujcovna.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgAutopujcovna.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgAutopujcovna.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProgAutopujcovna().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAktualni;
    private javax.swing.JButton jButtonNactiStav;
    private javax.swing.JButton jButtonNajdiAuto;
    private javax.swing.JButton jButtonNaslednik;
    private javax.swing.JButton jButtonOdeberAuto;
    private javax.swing.JButton jButtonOdeberPobocku;
    private javax.swing.JButton jButtonPosledni;
    private javax.swing.JButton jButtonPredchudce;
    private javax.swing.JButton jButtonPrvni;
    private javax.swing.JButton jButtonUlozStav;
    private javax.swing.JButton jButtonVlozAutoOsobni;
    private javax.swing.JButton jButtonVlozAutoUzitkove;
    private javax.swing.JButton jButtonVlozPobocku;
    private javax.swing.JButton jButtonVratAuto;
    private javax.swing.JButton jButtonVybudujFrontu;
    private javax.swing.JButton jButtonVypujciAuto;
    private javax.swing.JButton jButtonZrus;
    private javax.swing.JComboBox jComboBoxProhlidky;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanelTlacitek;
    private javax.swing.JScrollPane jScrollPaneAuta;
    private javax.swing.JScrollPane jScrollPaneFronta;
    private javax.swing.JScrollPane jScrollPanePobocky;
    private javax.swing.JScrollPane jScrollPaneVypujcky;
    private javax.swing.JTabbedPane jTabbedPaneZalozky;
    private javax.swing.JTextArea jTextAreaAuta;
    private javax.swing.JTextArea jTextAreaFronta;
    private javax.swing.JTextArea jTextAreaPobocky;
    private javax.swing.JTextArea jTextAreaVypujcky;
    // End of variables declaration//GEN-END:variables
}
